//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ScheduleModel", "ScheduleTimesForeignKey", "ScheduleDates", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ShomreiTorah.Schedules.ScheduleCell), "ScheduleTimes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ShomreiTorah.Schedules.ScheduleTime))]

#endregion

namespace ShomreiTorah.Schedules
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ScheduleContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ScheduleContext object using the connection string found in the 'ScheduleContext' section of the application configuration file.
        /// </summary>
        public ScheduleContext() : base("name=ScheduleContext", "ScheduleContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ScheduleContext object.
        /// </summary>
        public ScheduleContext(string connectionString) : base(connectionString, "ScheduleContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ScheduleContext object.
        /// </summary>
        public ScheduleContext(EntityConnection connection) : base(connection, "ScheduleContext")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ScheduleCell> CellSet
        {
            get
            {
                if ((_CellSet == null))
                {
                    _CellSet = base.CreateObjectSet<ScheduleCell>("CellSet");
                }
                return _CellSet;
            }
        }
        private ObjectSet<ScheduleCell> _CellSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ScheduleTime> TimeSet
        {
            get
            {
                if ((_TimeSet == null))
                {
                    _TimeSet = base.CreateObjectSet<ScheduleTime>("TimeSet");
                }
                return _TimeSet;
            }
        }
        private ObjectSet<ScheduleTime> _TimeSet;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CellSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCellSet(ScheduleCell scheduleCell)
        {
            base.AddObject("CellSet", scheduleCell);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TimeSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTimeSet(ScheduleTime scheduleTime)
        {
            base.AddObject("TimeSet", scheduleTime);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// A cell in the schedule.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScheduleModel", Name="ScheduleCell")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScheduleCell : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScheduleCell object.
        /// </summary>
        /// <param name="englishDate">Initial value of the EnglishDate property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        public static ScheduleCell CreateScheduleCell(global::System.DateTime englishDate, global::System.String title)
        {
            ScheduleCell scheduleCell = new ScheduleCell();
            scheduleCell.EnglishDate = englishDate;
            scheduleCell.Title = title;
            return scheduleCell;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EnglishDate
        {
            get
            {
                return _EnglishDate;
            }
            private set
            {
                OnEnglishDateChanging(value);
                ReportPropertyChanging("EnglishDate");
                _EnglishDate = StructuralObject.SetValidValue(value, "EnglishDate");
                ReportPropertyChanged("EnglishDate");
                OnEnglishDateChanged();
            }
        }
        private global::System.DateTime _EnglishDate;
        partial void OnEnglishDateChanging(global::System.DateTime value);
        partial void OnEnglishDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        private global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScheduleModel", "ScheduleTimesForeignKey", "ScheduleTimes")]
        public EntityCollection<ScheduleTime> Times
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ScheduleTime>("ScheduleModel.ScheduleTimesForeignKey", "ScheduleTimes");
            }
            private set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ScheduleTime>("ScheduleModel.ScheduleTimesForeignKey", "ScheduleTimes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// A single time value within a cell.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScheduleModel", Name="ScheduleTime")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScheduleTime : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScheduleTime object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="sqlTime">Initial value of the SqlTime property.</param>
        /// <param name="lastModified">Initial value of the LastModified property.</param>
        public static ScheduleTime CreateScheduleTime(global::System.String name, global::System.DateTime sqlTime, global::System.DateTime lastModified)
        {
            ScheduleTime scheduleTime = new ScheduleTime();
            scheduleTime.Name = name;
            scheduleTime.SqlTime = sqlTime;
            scheduleTime.LastModified = lastModified;
            return scheduleTime;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        private global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// A DateTime containing the time for  this value.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SqlTime
        {
            get
            {
                return _SqlTime;
            }
            set
            {
                OnSqlTimeChanging(value);
                ReportPropertyChanging("SqlTime");
                _SqlTime = StructuralObject.SetValidValue(value, "SqlTime");
                ReportPropertyChanged("SqlTime");
                OnSqlTimeChanged();
            }
        }
        private global::System.DateTime _SqlTime;
        partial void OnSqlTimeChanging(global::System.DateTime value);
        partial void OnSqlTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsBold
        {
            get
            {
                return _IsBold;
            }
            set
            {
                OnIsBoldChanging(value);
                ReportPropertyChanging("IsBold");
                _IsBold = StructuralObject.SetValidValue(value, "IsBold");
                ReportPropertyChanged("IsBold");
                OnIsBoldChanged();
            }
        }
        private global::System.Boolean _IsBold = false;
        partial void OnIsBoldChanging(global::System.Boolean value);
        partial void OnIsBoldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastModified
        {
            get
            {
                return _LastModified;
            }
            private set
            {
                OnLastModifiedChanging(value);
                ReportPropertyChanging("LastModified");
                _LastModified = StructuralObject.SetValidValue(value, "LastModified");
                ReportPropertyChanged("LastModified");
                OnLastModifiedChanged();
            }
        }
        private global::System.DateTime _LastModified;
        partial void OnLastModifiedChanging(global::System.DateTime value);
        partial void OnLastModifiedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScheduleModel", "ScheduleTimesForeignKey", "ScheduleDates")]
        public ScheduleCell Cell
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScheduleCell>("ScheduleModel.ScheduleTimesForeignKey", "ScheduleDates").Value;
            }
            private set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScheduleCell>("ScheduleModel.ScheduleTimesForeignKey", "ScheduleDates").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ScheduleCell> CellReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScheduleCell>("ScheduleModel.ScheduleTimesForeignKey", "ScheduleDates");
            }
            private set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ScheduleCell>("ScheduleModel.ScheduleTimesForeignKey", "ScheduleDates", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
